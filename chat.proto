syntax = "proto3";

option go_package = "github.com/MetalMari/chat_go/chat_protos/chat";

package chat;

// The chat service for users messaging. 
service Chat {
    // Gets a list of users. 
    rpc GetUsers(GetUsersRequest) returns (GetUsersReply) {}

    // Sends a message from user. 
    rpc SendMessage(SendMessageRequest) returns (SendMessageReply) {}

    // Gets messages in queue and subscribe to new ones. 
    rpc Subscribe(SubscribeRequest) returns (stream Message) {}
  }
  
  // The request message containing for getting list of users, can be empty.  
  message GetUsersRequest {}

  // User is represented by login and full name. 
  message User {
    // Login - identifier of user, required. 
    string login = 1;

    // User's full name, required for message. 
    string full_name = 2;
  }
  
  // The response message containing the list of users. 
  message GetUsersReply {
    // List of users for messaging. 
    repeated User users = 1;
  }

  // The message containing the users logins, timestamp created_at and message body. 
  message Message {
    // Login of user who sends the message. 
    string login_from = 1;

    // Login of user who receives the message. 
    string login_to = 2;

    // Timestamp of message creation. 
    int32 created_at = 3;

    // The content of the message. 
    string body = 4;
  }

  // MessageRequest sends message to the server
  message SendMessageRequest {
    Message message = 1;
  }

  // MessageResponce can be just simple string, means that message is received. 
  message SendMessageReply {
    // String - result, if message was received. 
    string status = 1;
  }

  // SubscribeMessage is sent to subscribe a new messages. 
  message SubscribeRequest {
    // Login of user, who is subscribed to new messages. 
    string login = 1;
  }
